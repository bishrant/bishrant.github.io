(window.webpackJsonp=window.webpackJsonp||[]).push([[150],{"4ugL":function(e,r,n){"use strict";n.r(r),n.d(r,"create",function(){return l}),n.d(r,"projectGeometry",function(){return u});var t=n("EyXx"),i=n("zlDU"),o=n("AiS/"),a=n("ACSY");async function l(e=null,r){if(t.a.geometryServiceUrl)return new(0,(await Promise.resolve().then(n.bind(null,"1E6V"))).default)({url:t.a.geometryServiceUrl});if(!e)throw new i.a("internal:geometry-service-url-not-configured");let a;if(a="portal"in e?e.portal||o.a.getDefault():e,await a.load({signal:r}),a.helperServices&&a.helperServices.geometry&&a.helperServices.geometry.url)return new(0,(await Promise.resolve().then(n.bind(null,"1E6V"))).default)({url:a.helperServices.geometry.url});throw new i.a("internal:geometry-service-url-not-configured")}async function u(e,r,n=null,t){const o=await l(n,t),u=new a.a;u.geometries=[e],u.outSpatialReference=r;const c=await o.project(u,{signal:t});if(c&&Array.isArray(c)&&1===c.length)return c[0];throw new i.a("internal:geometry-service-projection-failed")}}}]);