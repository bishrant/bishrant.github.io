(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{etVg:function(e,t,i){"use strict";i.d(t,"a",function(){return l}),i.d(t,"b",function(){return h});var s=i("OIYi"),r=i("aQrP"),n=i("Q3fD"),a=i("0Ect"),o=i("xtdb");function h(e){const t=new r.a;return t.extensions.add("GL_OES_standard_derivatives"),t.attributes.add("position","vec3"),t.attributes.add("uv0","vec2"),t.vertex.uniforms.add("proj","mat4").add("view","mat4"),t.varyings.add("vUV","vec2"),e.multipassTerrainEnabled&&t.varyings.add("depth","float"),t.vertex.code.add(s.a`
    void main(void) {
      vUV = uv0;
      ${e.multipassTerrainEnabled?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);
    }
  `),e.multipassTerrainEnabled&&(t.fragment.include(a.a),t.include(o.b,e)),t.fragment.uniforms.add("size","vec2").add("color1","vec4").add("color2","vec4"),t.fragment.include(n.a),t.fragment.code.add(s.a`
    void main() {
      ${e.multipassTerrainEnabled?"terrainDepthTest(gl_FragCoord, depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      gl_FragColor = mix(color2, color1, t);
      ${e.OITEnabled?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}
    }
  `),t}var l=Object.freeze({__proto__:null,build:h})},nEdL:function(e,t,i){"use strict";i.r(t);var s=i("pO5D"),r=(i("wSAH"),i("6S2I")),n=(i("zqDF"),i("WbKI")),a=i("Stxv"),o=i("04ZG"),h=(i("4EHJ"),i("ju1D"),i("9AIY"),i("9MzC")),l=i("gEht"),c=(i("cCpn"),i("h1D1")),d=i("dV4Z"),u=i("Jv1m"),m=i("Ehpe"),p=i("r0DZ"),g=i("N5XI"),b=i("Pt/X"),_=i("fqh+"),O=i("R3Kl"),j=i("srIe"),v=i("qRWG"),L=i("Cy1f"),f=i("5DEt"),y=i("15Hh"),w=i("r+FG"),P=i("yvcr"),S=i("klA5"),M=i("NUQ5"),C=i("ZHv2"),x=i("4EdQ"),A=i("tKWm"),D=i("dK/y"),G=i("B3Fv"),V=i("J+o3"),k=i("lObl"),R=i("Ango"),z=i("X668"),E=i("1/dN"),T=i("fFEv"),U=i("NbNv"),q=i("hnWO"),I=i("w6Td"),W=i("ypgp"),F=i("2jVe"),H=i("+h6m"),B=i("jjdI"),N=i("GJyJ"),$=i("jpeq"),J=i("dDjh"),K=i("xtdb"),Q=i("etVg");class Z extends W.a{initializeProgram(e){const t=Z.shader.get(),i=this.configuration,s=t.build({OITEnabled:0===i.transparencyPassType,multipassTerrainEnabled:i.multipassTerrainEnabled,cullAboveGround:i.cullAboveGround});return new B.a(e.rctx,s.generateSource("vertex"),s.generateSource("fragment"),H.a)}bindPass(e,t,i){$.a.bindProjectionMatrix(this.program,i.camera.projectionMatrix),this.program.setUniform2fv("size",t.size),this.program.setUniform4fv("color1",t.color1),this.program.setUniform4fv("color2",t.color2),i.multipassTerrainEnabled&&(this.program.setUniform2fv("cameraNearFar",i.camera.nearFar),this.program.setUniform2fv("inverseViewport",i.inverseViewport),Object(K.a)(this.program,e,i))}bindDraw(e){$.a.bindView(this.program,e)}setPipelineState(e){const t=this.configuration,i=3===e,s=2===e;return Object(N.d)({blending:t.transparent?i?X:Object(J.a)(e):null,depthTest:{func:Object(J.b)(e)},depthWrite:i?t.writeDepth&&N.c:Object(J.c)(e),colorWrite:N.b,polygonOffset:i||s?t.polygonOffset&&Y:{factor:-1,units:-25}})}initializePipeline(){return this.setPipelineState(this.configuration.transparencyPassType)}}Z.shader=new I.a(Q.a,()=>i.e(171).then(i.bind(null,"Pem8")));const Y={factor:0,units:-25},X=Object(N.e)(770,1,771,771);class ee extends F.a{constructor(){super(...arguments),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.transparencyPassType=3,this.multipassTerrainEnabled=!1,this.cullAboveGround=!0}}Object(s.a)([Object(F.b)()],ee.prototype,"transparent",void 0),Object(s.a)([Object(F.b)()],ee.prototype,"writeDepth",void 0),Object(s.a)([Object(F.b)()],ee.prototype,"polygonOffset",void 0),Object(s.a)([Object(F.b)({count:4})],ee.prototype,"transparencyPassType",void 0),Object(s.a)([Object(F.b)()],ee.prototype,"multipassTerrainEnabled",void 0),Object(s.a)([Object(F.b)()],ee.prototype,"cullAboveGround",void 0);class te extends U.a{constructor(e){super(e,se),this.techniqueConfig=new ee}dispose(){}getPassParameters(){return this.params}getTechniqueConfig(e){return this.techniqueConfig.transparent=this.params.transparent,this.techniqueConfig.writeDepth=this.params.writeDepth,this.techniqueConfig.polygonOffset=this.params.polygonOffset,this.techniqueConfig.transparencyPassType=e?e.transparencyPassType:3,this.techniqueConfig.multipassTerrainEnabled=!!e&&e.multipassTerrainEnabled,this.techniqueConfig.cullAboveGround=!e||e.cullAboveGround,this.techniqueConfig}intersect(e,t,i,s,r,n,a){return Object(T.e)(e,t,s,r,n,void 0,a)}getGLMaterial(e){return 0===e.output||7===e.output?new ie(e):void 0}createBufferWriter(){return new q.a(q.d)}}class ie extends E.a{constructor(e){super(e),this.updateParameters()}updateParameters(e){this.technique=this.techniqueRep.acquireAndReleaseExisting(Z,this.material.getTechniqueConfig(e),this.technique)}beginSlot(e){let t=3;return this.technique.configuration.transparent&&(t=this.technique.configuration.writeDepth?5:8),e===t}ensureParameters(e){this.updateParameters(e)}bind(e,t){e.bindProgram(this.technique.program),this.technique.bindPass(e,this.material.getPassParameters(),t)}}const se={size:[1,1],color1:[.75,.75,.75,1],color2:[.5,.5,.5,1],transparent:!1,writeDepth:!0,polygonOffset:!1,...U.b};class re extends z.a{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=4,this._geometry=null,this._size=[1,1],this._color1=[1,.5,0,.5],this._color2=[1,1,1,.5],this.applyProps(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this.updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.geometryChanged()}get size(){return this._size}set size(e){this._size=e,this.updateMaterial()}get color1(){return this._color1}set color1(e){this._color1=e,this.updateMaterial()}get color2(){return this._color2}set color2(e){this._color2=e,this.updateMaterial()}updateMaterial(){Object(j.k)(this._checkerBoardMaterial)&&this._checkerBoardMaterial.setParameterValues({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new te({size:this._size,color1:this._color1,color2:this._color2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:4})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(e){Object(j.k)(this._checkerBoardMaterial)&&e(this._checkerBoardMaterial)}createGeometries(e){if(Object(j.j)(this._geometry)||Object(j.j)(this._checkerBoardMaterial))return;const t=ne;Object(y.m)(t,this.transform);const i=this._geometry,s=[],r=Object(L.e)();i.position.forEach(e=>{Object(f.i)(r,e,t),s.push(r[0],r[1],r[2])});const n=[];i.uv.forEach(e=>{n.push(e[0],e[1])});const a=new R.a([["position",{size:3,data:s,exclusive:!0}],["uv0",{size:2,data:n,exclusive:!0}]],[["position",i.triangleIndices],["uv0",i.triangleIndices]]);e.addGeometry(a,this._checkerBoardMaterial)}geometryChanged(){this.recreateGeometry()}}const ne=Object(L.e)();var ae=i("XBzj");const oe={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:1,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,handleRadiusHovered:10,handleRadiusMouse:10,handleRadiusTouch:25,pathLineColor:[1,.5,0,1],pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:[1,.5,0,1],perimeterLineWidth:2,projectionLineColor:[1,.5,0,1],projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:[1,.5,0,.5],areaColor2:[1,1,1,.5],fillColor:[1,.5,0,.5],lineSubdivisions:64,labelDistance:25};class he{constructor(e,t=new x.a,i={}){this._model=e,this._manipulators=t,this.vertexManipulators=[],this._visible=!1,this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._laserLine=null,this._measurementArea=null,this._areaLabel=null,this._pathLengthLabel=null,this._cursorSegmentLengthLabel=null,this._perimeterLengthLabel=null,this._cursorManipulator=null,this._pathSegments=[],this._perimeterSegments=[],this._cursorSegment=null,this._listenerHandles=null,this._origin=Object(L.e)(),this._originTransform=Object(w.b)(),this._tempHandlePosition=Object(L.e)(),this._cursorPositionRenderSpace=Object(L.e)(),this._view=this._model.sceneView,this._params=Object(G.a)(oe,i),this._intersector=new S.a(this._view.state.mode),this._intersector.options.store=0;const s=Object(D.e)(this._view,this._params.handleColor,this._params.handleOpacity);s.available=!1,s.radius=this._params.handleRadius,s.interactive=!1,this._manipulators.add(s),this._cursorManipulator=s,this._path=new k.a({view:this._view,attached:!0,width:this._params.pathLineWidth,color:this._params.pathLineColor,polygonOffset:!0,renderOccluded:4}),this._intersectedPath=new k.a({view:this._view,attached:!0,width:this._params.pathLineWidth,color:this._params.intersectingLineColor,polygonOffset:!0,renderOccluded:4}),this._perimeter=new k.a({view:this._view,attached:!0,width:this._params.perimeterLineWidth,color:this._params.perimeterLineColor,polygonOffset:!0,renderOccluded:4}),this._intersectedPerimeter=new k.a({view:this._view,attached:!0,width:this._params.perimeterLineWidth,color:this._params.intersectingLineColor,polygonOffset:!0,renderOccluded:4}),this._projectionLines=new k.a({view:this._view,attached:!0,width:this._params.projectionLineWidth,color:this._params.projectionLineColor,stipplePattern:Object(M.c)(this._params.projectionLineStippleSize),stippleIntegerRepeats:!1,polygonOffset:!0,renderOccluded:4}),this._laserLine=new C.a({view:this._view,attached:!0,style:{glowColor:this._params.laserLineGlowColor,glowWidth:this._params.laserLineGlowWidth,glowFalloff:this._params.laserLineGlowFalloff,innerColor:this._params.laserLineInnerColor,innerWidth:this._params.laserLineInnerWidth,globalAlpha:this._params.laserLineGlobalAlpha}}),this._measurementArea=new re({view:this._view,attached:!0,color1:this._params.areaColor1,color2:this._params.areaColor2}),this._areaLabel=new V.a({view:this._view,attached:!0,fontSize:16}),this._pathLengthLabel=new V.a({view:this._view,attached:!0,fontSize:12}),this._cursorSegmentLengthLabel=new V.a({view:this._view,attached:!0,fontSize:12}),this._perimeterLengthLabel=new V.a({view:this._view,attached:!0,fontSize:12})}destroy(){this.hide(),this._laserLine.destroy(),this._laserLine=null,this._measurementArea.destroy(),this._measurementArea=null,this._path.destroy(),this._path=null,this._intersectedPath.destroy(),this._intersectedPath=null,this._perimeter.destroy(),this._perimeter=null,this._intersectedPerimeter.destroy(),this._intersectedPerimeter=null,this._areaLabel.destroy(),this._areaLabel=null,this._pathLengthLabel.destroy(),this._pathLengthLabel=null,this._cursorSegmentLengthLabel.destroy(),this._cursorSegmentLengthLabel=null,this._perimeterLengthLabel.destroy(),this._perimeterLengthLabel=null}get requiresCursorPoint(){return("initial"===this._model.state||"drawing"===this._model.state)&&this._model.active}get visible(){return this._visible}set visible(e){e?this.show():this.hide()}get testData(){const e=this._laserLine.testData;return{labels:{area:this._areaLabel,pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel},laserLineRenderer:Object(j.k)(e)?{heightManifoldEnabled:e.heightManifoldEnabled,heightManifoldTarget:e.heightManifoldTarget,pointDistanceEnabled:e.pointDistanceEnabled,pointDistanceOrigin:e.pointDistanceOrigin,pointDistanceTarget:e.pointDistanceTarget,lineVerticalPlaneEnabled:e.lineVerticalPlaneEnabled}:{heightManifoldEnabled:!1,heightManifoldTarget:null,pointDistanceEnabled:!1,pointDistanceOrigin:null,pointDistanceTarget:null,lineVerticalPlaneEnabled:!1}}}show(){this._visible||(this._visible=!0,this._path.visible=!0,this._intersectedPath.visible=!0,this._perimeter.visible=!0,this._intersectedPerimeter.visible=!0,this._projectionLines.visible=!0,this._laserLine.visible=!0,this._measurementArea.visible=!0,this._areaLabel.visible=!0,this._pathLengthLabel.visible=!0,this._cursorSegmentLengthLabel.visible=!0,this._perimeterLengthLabel.visible=!0,this._initializeListeners(),this._updateAll(this._model.viewData))}hide(){this._visible&&(this._visible=!1,this._path.visible=!1,this._intersectedPath.visible=!1,this._perimeter.visible=!1,this._projectionLines.visible=!1,this._intersectedPerimeter.visible=!1,this._laserLine.visible=!1,this._measurementArea.visible=!1,this._areaLabel.visible=!1,this._pathLengthLabel.visible=!1,this._cursorSegmentLengthLabel.visible=!1,this._perimeterLengthLabel.visible=!1,this._destroyListeners(),this.vertexManipulators.forEach(e=>{this._removeVertexManipulator(e.manipulator)}),this.vertexManipulators=[],this._view.cursor=null)}vertexHandleAt(e,t){const i=this._manipulators.intersect(e,t);return Object(j.k)(i)?i.manipulator.metadata:null}manipulatorToVertex(e){return e.metadata}pick(e){const t=this._view.spatialReference,i=Object(v.j)(e.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(i,this._intersector);const s=this._intersector.results.min,r=Object(L.e)();if(!s.getIntersectionPoint(r))return new he.PickResult;const n=this._view.renderCoordsHelper.fromRenderCoords(r,t);return Object(j.j)(n)?new he.PickResult:new he.PickResult("TerrainRenderer"===s.intersector?"surface":"feature",r,n)}overlappingHandles(e,t){return Object(G.c)(e,t,this._view)<=this._params.handleRadius}screenToMap3D(){return Object(A.b)(this._view)}_updateOrigin(e){Object(G.b)(e.positionsRenderCoords,this._origin),Object(y.i)(this._originTransform),Object(y.s)(this._originTransform,this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_updateAll(e){this._visible&&(this._updateOrigin(e),this._updatePathSegments(e),this._updatePerimeterSegments(e),this._updateVertexManipulators(e),this._updateArea(e),this._updateProjectionLines(e),this._updateLabels(e),this._updateLaserLine())}_createSegments(e,t){const i=e.path,s=this._view.renderCoordsHelper.spatialReference,r=this._model.measurementMode,n=[],a=[],o=[],h=e.validMeasurement?i.numVertices:i.numVertices-1;for(let l=0;l<h;++l){const h=e[t][l],c=e[t][(l+1)%i.numVertices];let d=null;switch(r){case"euclidean":d=new ae.a(h,c);break;case"geodesic":d=new ae.b(h,c,s)}e.intersectingSegments.has(l)?o.push(d):a.push(d),n.push(d)}return{all:n,nonIntersecting:a,intersecting:o}}_updatePathSegments(e){const t=this._createSegments(e,"positionsRenderCoords"),i=e.path,s=this._view.renderCoordsHelper,r=s.spatialReference,n=this._model.measurementMode;if(this._cursorSegment=null,i.numVertices>0&&"drawing"===this._model.state&&Object(j.k)(this._model.cursorPoint)&&s.toRenderCoords(this._model.cursorPoint,this._cursorPositionRenderSpace)){const s=e.positionsRenderCoords[i.numVertices-1],a=this._cursorPositionRenderSpace;let o=null;switch(n){case"euclidean":o=new ae.a(s,a);break;case"geodesic":o=new ae.b(s,a,r)}t.nonIntersecting.push(o),this._cursorSegment=o}this._path.setGeometryFromSegments(t.nonIntersecting,this._origin),this._intersectedPath.setGeometryFromSegments(t.intersecting,this._origin),this._pathSegments=t.all}_updatePerimeterSegments(e){const t=this._createSegments(e,"positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(t.nonIntersecting,this._origin),this._intersectedPerimeter.setGeometryFromSegments(t.intersecting,this._origin),this._perimeterSegments=t.all}_createVertexManipulator(){const e=Object(D.e)(this._view,this._params.handleColor,this._params.handleOpacity);return e.radius=this._params.handleRadius,{id:this._manipulators.add(e),manipulator:e}}_removeVertexManipulator(e){this._manipulators.remove(e)}_updateVertexManipulators(e){const t=this._model.path.vertices,i=this.vertexManipulators;Object(G.d)(i,t.length,()=>this._createVertexManipulator(),e=>this._removeVertexManipulator(e.manipulator)),i.forEach((i,s)=>{i.manipulator.metadata=t[s],i.manipulator.renderLocation=e.positionsRenderCoords[s]}),"drawing"===this._model.state&&Object(j.k)(this._model.cursorPoint)?(this._cursorManipulator.available=!0,this._cursorManipulator.location=this._model.cursorPoint):this._cursorManipulator.available=!1}_updateArea(e){switch(this._model.measurementMode){case"euclidean":this._updateAreaEuclidean(e);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(e){e.validMeasurement&&0===e.intersectingSegments.size&&e.triangleIndices?(this._measurementArea.geometry={uv:e.positionsProjected,position:e.positionsFittedRenderCoords,triangleIndices:e.triangleIndices},this._measurementArea.size=[e.checkerSize,e.checkerSize],this._measurementArea.visible=!0,this._perimeter.visible=!0,this._projectionLines.visible=!0):(this._measurementArea.visible=!1,this._perimeter.visible=!1,this._projectionLines.visible=!1)}_updateAreaGeodesic(){this._measurementArea.visible=!1,this._perimeter.visible=!1,this._projectionLines.visible=!1}_updateProjectionLines(e){const t=e.path;if(t.numVertices>0&&e.validMeasurement&&"euclidean"===this._model.measurementMode){const e=[];for(let i=0;i<t.numVertices;++i){const t=Object(L.e)();Object(f.i)(t,this._model.viewData.positionsRenderCoords[i],this._origin);const s=Object(L.e)();Object(f.i)(s,this._model.viewData.positionsFittedRenderCoords[i],this._origin),e.push([t,s])}this._projectionLines.geometry=e}else this._projectionLines.geometry=null}_updateLabels(e){if(!this._visible)return;const t=this._model,i=this._view,s="drawing"===t.state;if(this._areaLabel.geometry=i.renderCoordsHelper.fromRenderCoords(e.areaCentroid,i.spatialReference),this._areaLabel.text=t.areaLabel,this._areaLabel.visible=e.validMeasurement&&0===e.intersectingSegments.size&&null!=t.areaLabel,e.pathLengthLabelSegmentIndex>=0&&e.pathLengthLabelSegmentIndex<this._pathSegments.length){const i=this._pathSegments[e.pathLengthLabelSegmentIndex],r=Object(j.k)(this._cursorSegment)?this._cursorSegment:le;this._pathLengthLabel.distance=this._params.labelDistance,this._pathLengthLabel.geometry={type:"corner",left:i,right:r},this._pathLengthLabel.text=t.pathLengthLabel,this._pathLengthLabel.visible=s&&t.path.numVertices>0}else this._pathLengthLabel.visible=!1;this._cursorSegmentLengthLabel.distance=this._params.labelDistance,this._cursorSegmentLengthLabel.geometry=Object(j.k)(this._cursorSegment)?{type:"segment",segment:this._cursorSegment,sampleLocation:"end"}:null,this._cursorSegmentLengthLabel.anchor="bottom",this._cursorSegmentLengthLabel.text=t.cursorSegmentLengthLabel,this._cursorSegmentLengthLabel.visible=s&&!!t.cursorSegmentLength&&0!==t.cursorSegmentLength.value,this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=!1),this._pathLengthLabel.overlaps(this._areaLabel)&&(this._pathLengthLabel.visible=!1),this._updatePerimeterLabel(this._model.viewData)}_updatePerimeterLabel(e){const t=this._model,i="geodesic"===t.measurementMode;if(t.validMeasurement&&0===e.intersectingSegments.size){this._perimeterLengthLabel.distance=this._params.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=t.perimeterLengthLabel,this._perimeterLengthLabel.visible=!0;let s=!0;for(let t=0;t<e.path.numVertices;++t){const r=(e.perimeterLengthLabelSegmentIndex+t)%e.path.numVertices;if(s=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:i?this._pathSegments[r]:this._perimeterSegments[r],sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;s=!1}this._perimeterLengthLabel.visible=s}else this._perimeterLengthLabel.visible=!1}_getFocusPoint(){const e=this._model,t=this._model.lastDraggedVertex;switch(e.state){case"drawing":return Object(j.k)(e.cursorPoint)?e.cursorPoint:Object(j.k)(t)?e.path.getVertexPositionAsPoint(t):Object(j.q)(e.path.lastPoint);case"editing":return Object(j.k)(t)?e.path.getVertexPositionAsPoint(t):null;default:return e.cursorPoint}}_updateLaserLine(){const e=this._model,t=this._params.laserLineEnabled&&"measured"!==e.state&&e.active,i=this._getFocusPoint();if(t&&Object(j.k)(i)){const e=this._tempHandlePosition;this._view.renderCoordsHelper.toRenderCoords(i,e),this._laserLine.heightManifoldTarget=e}else this._laserLine.heightManifoldTarget=null}_initializeListeners(){this._listenerHandles=new p.a,this._listenerHandles.add([this._model.watch(["state","lastDraggedVertex"],()=>this._updateLaserLine()),this._model.watch(["cursorPoint","unit","measurementMode","active","viewData"],()=>this._updateAll(this._model.viewData)),this._model.watch(["areaLabel","cursorSegmentLengthLabel","pathLengthLabel","perimeterLengthLabel"],()=>{this._updateAll(this._model.viewData)}),this._view.state.watch("camera",()=>this._updatePerimeterLabel(this._model.viewData))])}_destroyListeners(){this._listenerHandles.destroy(),this._listenerHandles=null}}he._handleGeometry=P.a.createSphereGeometry(1,32,32),function(e){e.PickRequest=class{},e.PickResult=class{constructor(e=null,t=null,i=null){this.type=e,this.scenePoint=t,this.mapPoint=i}}}(he||(he={}));const le=new ae.a(Object(L.e)(),Object(L.e)());var ce=he,de=i("QS+a"),ue=i("08/N"),me=i("wg3g");function pe(e){return"mouse"!==e.pointerType||0===e.button}var ge=i("/CmD"),be=i("IDUf"),_e=i("OKTS"),Oe=i("YyOG"),je=(i("G48n"),i("9pTf")),ve=i("gYg2"),Le=i("n4FQ"),fe=i("dhe/");let ye=class extends ge.a{constructor(){super(...arguments),this.result=null}destroy(){this.result=null}set geometry(e){this.result=null,this._set("geometry",Object(j.k)(e)?e.clone():null)}};Object(s.a)([Object(n.b)({value:null})],ye.prototype,"geometry",null),Object(s.a)([Object(n.b)()],ye.prototype,"result",void 0),ye=Object(s.a)([Object(o.a)("esri.views.3d.interactive.graphics.AreaMeasurement3D")],ye);var we=i("SuVq"),Pe=(i("4GrV"),i("zm0L")),Se=i("ixpo"),Me=i("aunz"),Ce=i("Z35e");class xe{constructor(e,t,i){this.editGeometry=e,this.vertex=t,this.pos=i}apply(){let e="redo";Object(j.j)(this.originalPosition)&&(e="apply",this.originalPosition=this.vertex.pos),this._apply(e)}undo(){this.vertex.pos=Object(j.q)(this.originalPosition),this.editGeometry.emit("change",{updatedVertices:[this.vertex],operation:"undo"})}accumulate(e){return e instanceof xe&&e.vertex===this.vertex&&(this.pos=e.pos,this._apply("apply"),!0)}_apply(e){this.vertex.pos=this.pos,this.editGeometry.components.forEach(e=>e.unnormalizeVertexPositions()),this.editGeometry.emit("change",{updatedVertices:[this.vertex],operation:e})}}class Ae extends Pe.a{constructor(){super(),this._handles=new p.a,this._dirty=!0,this._model=null,this._view=null,this._version=0,this._internalGeometryChange=!1}set model(e){this._model=e,Object(j.k)(this._model)&&Object(j.k)(this._view)&&this._initialize(this._model,this._view)}get model(){return this._model}get view(){return this._view}set view(e){this._view=e,Object(j.k)(this._model)&&Object(j.k)(this._view)&&this._initialize(this._model,this._view)}get initialized(){return Object(j.k)(this._model)&&Object(j.k)(this._view)}get version(){return this._version}_initialize(e,t){this._handles.removeAll(),this._handles.add(Object(g.init)(e,"geometry",()=>this._updateEditGeometryFromModelGeometry(e,t),!0))}_updateEditGeometryFromModelGeometry(e,t){this._version++,this._internalGeometryChange||(this._handles.remove("EditGeometry"),this._editGeometry=Object(j.k)(e.geometry)?Me.c.fromGeometry(e.geometry,t.viewingMode):new Me.c(Object(Se.a)(!0,!1,t.spatialReference,t.viewingMode)),this.emit("clear",{type:"clear"}),this._handles.add(this._editGeometry.on("change",t=>{this._internalGeometryChange=!0,e.geometry=this.numVertices>0?this._editGeometry.toPolygon():null,this._internalGeometryChange=!1}),"EditGeometry"))}get vertices(){const e=[];return this.forEachVertex(t=>{e.push(t)}),e}get numVertices(){return this.initialized&&this._editGeometry.components.length>0?this._editGeometry.components[0].vertices.length:0}get lastPoint(){if(this.initialized&&this._editGeometry.components.length>0){const e=this._editGeometry.components[0].getLastVertex();if(Object(j.k)(e))return this._editGeometry.coordinateHelper.createPoint(e.pos)}return null}getVertex(e){if(!this.initialized||0===this._editGeometry.components.length||0===this._editGeometry.components[0].vertices.length)return null;const t=this._editGeometry.components[0].vertices[0];let i=t;do{if(i.index===e)return i;i=i.right.right}while(i!==t&&null!=i);return null}getVertexPositionAsPoint(e){return this._editGeometry.coordinateHelper.createPoint(e.pos)}getVertexPositionAsPointFromIndex(e){return this._editGeometry.coordinateHelper.createPoint(this.getVertex(e).pos)}forEachVertex(e){this.initialized&&this._editGeometry.components.length>0&&this._editGeometry.components[0].iterateVertices(e)}forEachVertexPosition(e){const t=this._editGeometry.coordinateHelper;this.forEachVertex((i,s)=>{t.toPoint(i.pos,De),e(De,s)})}clear(){Object(j.k)(this.model)&&(this.model.geometry=null)}add(e){if(!this.initialized)return null;0===this._editGeometry.components.length&&this._editGeometry.components.push(new Me.a(this._editGeometry));const t=new Ce.a(this._editGeometry,this._editGeometry.components[0],this._editGeometry.coordinateHelper.fromPoint(e));return this._editGeometry.apply(t),this.emit("vertex-update",{type:"vertex-update"}),t}ensureContains(e,t=""){let i=!1;if(this._editGeometry.components.forEach(t=>{t.iterateVertices(t=>{t===e&&(i=!0)})}),!i)throw new Error(`vertex doesnt exist ${t}`);return i}setVertexPosition(e,t){if(!this.initialized)return null;const i=new xe(this._editGeometry,e,this._editGeometry.coordinateHelper.fromPoint(t));return this._editGeometry.apply(i),this.emit("vertex-update",{type:"vertex-update"}),i}}const De=new we.a;var Ge,Ve,ke=i("WZb1"),Re=i("Ehki"),ze=i("aAs6"),Ee=i("QLbw"),Te=i("6lH3");(Ve=Ge||(Ge={})).boundingSphere=function(e,t){const i=t.center;Object(f.v)(i,0,0,0);for(let r=0;r<e.length;++r)Object(f.e)(i,i,e[r]);Object(f.d)(i,i,1/e.length);let s=0;for(let r=0;r<e.length;++r)s=Math.max(s,Object(f.k)(i,e[r]));t.radius=Math.sqrt(s)},Ve.bestFitPlane=function(e,t){if(e.length<3)throw new Error("need at least 3 points to fit a plane");Object(ze.g)(e[0],e[1],e[2],t)},Ve.planePointDistance=function(e,t){return Object(f.g)(e,t)+e[3]},Ve.segmentLengthEuclidean=function(e,t,i){return Object(ve.o)(e,Ue,i)&&Object(ve.o)(t,qe,i)?Object(f.n)(Ue,qe):0},Ve.segmentLengthGeodesic=function(e,t){if(!Object(ve.p)(e,Ue)||!Object(ve.p)(t,qe))return 0;const i={distance:null};return Object(Ee.f)(i,[Ue[0],Ue[1]],[qe[0],qe[1]]),i.distance},Ve.segmentLengthGeodesicVector=function(e,t,i){const s={distance:null};return Object(Ee.f)(s,[e[0],e[1]],[t[0],t[1]],i),s.distance},Ve.triangleAreaEuclidean=function(e,t,i){return.5*Math.abs((t[0]-e[0])*(i[1]-e[1])-(t[1]-e[1])*(i[0]-e[0]))},Ve.triangleAreaGeodesic=function(e,t,i,s){const r=We;return Object(ve.s)(e,s,Ue)&&Object(ve.s)(t,s,qe)&&Object(ve.s)(i,s,Ie)?(r.setPoint(0,0,Ue),r.setPoint(0,1,qe),r.setPoint(0,2,Ie),Math.abs(Object(Te.geodesicArea)(r,"square-meters"))):0},Ve.tangentFrame=function(e,t,i){Math.abs(e[0])>Math.abs(e[1])?Object(f.v)(t,0,1,0):Object(f.v)(t,1,0,0),Object(f.f)(i,e,t),Object(f.q)(t,t),Object(f.f)(t,i,e),Object(f.q)(i,i)},Ve.fitHemisphere=function(e,t=null,i=!0){const s=(e,t)=>{if(0===t[0]&&0===t[1]&&0===t[2])return!1;for(let i=0;i<e.length;++i)if(Object(f.g)(t,e[i])<-1e-6)return!1;return!0};if(0===e.length)return!1;if(1===e.length)return t&&Object(f.j)(t,e[0]),!0;Object(f.v)(Fe,0,0,0);for(let r=0;r<e.length;++r)Object(f.e)(Fe,Fe,e[r]);if(Object(f.q)(Fe,Fe),s(e,Fe))return t&&Object(f.j)(t,Fe),!0;if(!i)return!1;for(let r=0;r<e.length;++r)for(let i=0;i<e.length;++i)if(r!==i&&(Object(f.f)(Fe,e[r],e[i]),Object(f.q)(Fe,Fe),s(e,Fe)))return t&&Object(f.j)(t,Fe),!0;return!1},Ve.compareSets=function(e,t){if(e===t)return!0;if(e.size!==t.size)return!1;for(let i=0;i<e.size;++i)if(!t.has(e[i]))return!1;return!0};const Ue=Object(L.e)(),qe=Object(L.e)(),Ie=Object(L.e)(),We=new Re.a({rings:[[Ue,qe,Ie]],spatialReference:ke.a.WGS84}),Fe=Object(L.e)();var He=Ge,Be=i("PNY3"),Ne=i("AvGH"),$e=i("D8Ta"),Je=i("+yyC"),Ke=i("M0lq");function Qe(e,t){const i=new Float64Array(e.length*t);for(let s=0;s<e.length;++s){const r=e[s];for(let e=0;e<t;++e)i[s*t+e]=r[e]}return i}var Ze=i("9lO2");let Ye=class extends ge.a{constructor(){super(...arguments),this._unitNormalizer=new Ze.a,this._measurementData=new class{constructor(){this.positionsWorldCoords=[],this.positionsRenderCoords=[],this.positionsProjectedWorldCoords=[],this.positionsFittedRenderCoords=[],this.positionsGeographic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.areaCentroidWorldCoords=Object(L.e)(),this.areaCentroidRenderCoords=Object(L.e)(),this.geodesicAreaCentroidRenderCoords=Object(L.e)(),this._length=0,this._centroidRenderCoords=Object(L.e)(),this._planeWorldCoords=Object($e.c)(),this._worldUp=Object(L.e)(),this._worldTangent=Object(L.e)(),this._frame=[Object(L.e)(),Object(L.e)(),Object(L.e)()],this._pathVersion=-1,this._validMeasurement=!1,this._tempU=Object(L.e)(),this._tempV=Object(L.e)(),this._tempVec3=Object(L.e)(),this._tempSphere={center:Object(L.e)(),radius:0}}update(e,t,i,s,r,n,a){if(this._pathVersion===e.version&&this._validMeasurement===s)return;this._pathVersion=e.version,this._validMeasurement=s,this._resize(e.numVertices);const o=Object(je.g)(t.spatialReference),h=Object(ve.b)(t.spatialReference,o)&&Object(ve.a)(t.spatialReference),l=this.positionsGeographic,c=this.positionsWorldCoords,d=this.positionsRenderCoords,u=this.positionsSpherical;e.forEachVertexPosition((e,t)=>{Object(ve.o)(e,c[t],n),Object(ve.o)(e,d[t],r),h&&(Object(ve.p)(e,l[t]),Object(ve.o)(e,u[t],o),Object(f.q)(u[t],u[t]))});const m=this._updatePathLengths(s);if(this.pathLength=this._length>0?new Le.a(i.normalizeDistance(m),"meters"):null,h){const e=this._updateGeodesicPathLengths(s,n);this.geodesicPathLength=this._length>0?new Le.a(e,"meters"):null}else this.geodesicPathLength=null;if(!s)return this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),void this.geodesicIntersectingSegments.clear();this._updateArea(t,i,r,n,a),h&&this._updateGeodesicArea(t)}_resize(e){for(e<this._length&&(this.positionsWorldCoords.length=e,this.positionsRenderCoords.length=e,this.positionsProjectedWorldCoords.length=e,this.positionsFittedRenderCoords.length=e,this.positionsGeographic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorldCoords.push(Object(L.e)()),this.positionsRenderCoords.push(Object(L.e)()),this.positionsProjectedWorldCoords.push(Object(Ne.a)()),this.positionsFittedRenderCoords.push(Object(L.e)()),this.positionsGeographic.push(Object(L.e)()),this.positionsSpherical.push(Object(L.e)()),this.positionsStereographic.push(Object(Ne.a)()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const t=this.positionsWorldCoords,i=this.pathSegmentLengths;let s=0;for(let r=0;r<this._length;++r){const n=i[r]=Object(f.n)(t[r],t[(r+1)%this._length]);(r<this._length-1||e)&&(s+=n)}return s}_updateGeodesicPathLengths(e,t){const i=this.positionsGeographic,s=this.geodesicPathSegmentLengths;let r=0;for(let n=0;n<this._length;++n){const a=s[n]=He.segmentLengthGeodesicVector(i[n],i[(n+1)%this._length],t);(n<this._length-1||e)&&(r+=a)}return r}_updateArea(e,t,i,s,r){const n=e.renderCoordsHelper,a=this.positionsWorldCoords,o=this.positionsRenderCoords,h=this.positionsProjectedWorldCoords,l=this.positionsFittedRenderCoords,c=this._planeWorldCoords,d=this._centroidRenderCoords;Object(G.b)(o,d),n.worldUpAtPosition(d,this._worldUp),n.worldBasisAtPosition(d,0,this._worldTangent),Object(ve.l)(d,this._worldUp,i,this._worldUp,s),Object(ve.l)(d,this._worldTangent,i,this._worldTangent,s),a.length>2&&He.bestFitPlane(a,c),this.fittingMode=this._selectFittingMode(c,a,this._worldUp,r);let u=0;if("horizontal"===this.fittingMode){let e=-1/0;o.forEach((t,i)=>{const s=n.getAltitude(o[i]);s>e&&(e=s,u=i)})}const m=a[u];let p=c,g=this._worldTangent;"horizontal"===this.fittingMode?p=this._worldUp:"vertical"===this.fittingMode&&(p=this._tempVec3,g=this._worldUp,Object(ze.e)(c,this._worldUp,p)),Object(f.j)(this._frame[2],p),Object(ze.e)(g,p,this._frame[0]),Object(f.f)(this._frame[1],this._frame[0],this._frame[2]),Object(f.s)(this._frame[1],this._frame[1]);const b=this._tempVec3,_=this._tempU,O=this._tempV;for(let j=0;j<this._length;++j){const e=h[j],t=l[j];Object(f.i)(b,a[j],m),Object(Ke.r)(e,Object(f.g)(this._frame[0],b),Object(f.g)(this._frame[1],b)),Object(f.d)(_,this._frame[0],e[0]),Object(f.d)(O,this._frame[1],e[1]),Object(f.e)(b,_,O),Object(f.e)(b,b,m),Object(ve.r)(b,s,t,i)}this.perimeterLength=this._length>0?new Le.a(t.normalizeDistance(this._updatePerimeterLengths()),"meters"):null,Object(G.b)(l,this.areaCentroidRenderCoords),Object(ve.r)(this.areaCentroidRenderCoords,i,this.areaCentroidWorldCoords,s),this._updateIntersectingSegments(),this.area=0===this.intersectingSegments.size?new Le.a(t.normalizeArea(this._computeArea()),"square-meters"):null}_updateGeodesicArea(e){const t=e.renderCoordsHelper,i=this.positionsSpherical,s=this.positionsStereographic,r=this._tempVec3,n=He.fitHemisphere(i,r);if(!n)return void(this.geodesicArea=null);const a=this._tempU,o=this._tempV;Object(ze.j)(r,a,o);for(let h=0;h<this._length;++h){const e=Object(f.g)(i[h],a),t=Object(f.g)(i[h],o),n=Object(f.g)(i[h],r);Object(Ke.r)(s[h],e/n,t/n)}Object(f.d)(r,r,Object(je.e)(e.spatialReference).radius),t.toRenderCoords(r,Object(je.g)(e.spatialReference),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=n&&0===this.geodesicIntersectingSegments.size?new Le.a(this._computeGeodesicArea(),"square-meters"):null}_updatePerimeterLengths(){const e=this.positionsProjectedWorldCoords,t=this.perimeterSegmentLengths;let i=0;for(let s=0;s<this._length;++s)i+=t[s]=Object(Ke.i)(e[s],e[(s+1)%this._length]);return i}_updateIntersectingSegments(){const e=this.positionsProjectedWorldCoords,t=this.intersectingSegments;t.clear();for(let i=0;i<this._length;++i)for(let s=i+2;s<this._length;++s){if((s+1)%this._length===i)continue;const r=e[i],n=e[(i+1)%this._length],a=e[s],o=e[(s+1)%this._length];Object(Be.d)(r,n,a,o)&&(t.add(i),t.add(s))}}_computeArea(){const e=this.positionsProjectedWorldCoords,t=Qe(e,2),i=this.triangleIndices=new Uint32Array(Object(Je.b)(t,[],2));let s=0;for(let r=0;r<i.length;r+=3)s+=He.triangleAreaEuclidean(e[i[r]],e[i[r+1]],e[i[r+2]]);return s}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,t=this.geodesicIntersectingSegments;t.clear();for(let i=0;i<this._length;++i)for(let s=i+2;s<this._length;++s){if((s+1)%this._length===i)continue;const r=e[i],n=e[(i+1)%this._length],a=e[s],o=e[(s+1)%this._length];Object(Be.d)(r,n,a,o)&&(t.add(i),t.add(s))}}_computeGeodesicArea(){const e=this.positionsGeographic,t=Qe(this.positionsStereographic,2),i=this.geodesicTriangleIndices=new Uint32Array(Object(Je.b)(t,[],2));let s=0;for(let r=0;r<i.length;r+=3)s+=He.triangleAreaGeodesic(e[i[r]],e[i[r+1]],e[i[r+2]],ke.a.WGS84);return s}_selectFittingMode(e,t,i,s){const r=t.map(t=>Math.abs(He.planePointDistance(e,t))).reduce((e,t)=>Math.max(e,t),0);He.boundingSphere(t,this._tempSphere);const n=r/(2*this._tempSphere.radius);let a="horizontal";return n<s.maxRelativeErrorCoplanar?a="oblique":n<s.maxRelativeErrorAlmostCoplanar&&(a=Math.abs(Object(f.g)(i,e))>Math.cos(Object(_e.d)(s.verticalAngleThreshold))?"horizontal":"vertical"),a}},this._handles=new p.a,this.dataObject=new ye,this.path=new Ae,this.cursorPoint=null,this.state="initial",this.lastDraggedVertex=null,this.mode="auto",this.unit="metric",this.active=!1,this.fittingSettings={maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80},this.geodesicMeasurementDistanceThreshold=1e5}initialize(){this.path.model=this.dataObject,Object(Oe.a)("esri/core/t9n/Units").then(e=>{this.messages=e}),this._handles.add(Object(be.c)(async()=>{this.messages=await Object(Oe.a)("esri/core/t9n/Units")})),this._handles.add(Object(g.whenTrue)(this.sceneView,"ready",()=>{const{spatialReference:e}=this.sceneView,t=Object(je.g)(e),i=t===je.a?je.d:t,s=!e||Object(ve.b)(e,i)?i:e;this._worldSpatialReference=s,this._unitNormalizer.spatialReference=s,this.path.view=this.sceneView}),"scene-view"),this.reset(),this._handles.add(this.path.on("clear",()=>{this.notifyChange("numVertices"),this._updateMeasurementData()})),this._handles.add(this.path.on("vertex-update",()=>{this.notifyChange("numVertices"),this._updateMeasurementData()})),this._handles.add(this.watch("state",()=>this._updateMeasurementData(),!0)),this._handles.add(this.watch("fittingSettings",()=>this._updateMeasurementData()))}destroy(){this._handles.destroy(),this._handles=null}get validMeasurement(){return this.numVertices>=3&&"measured"===this.state||"editing"===this.state}get numVertices(){return this.path.numVertices}get measurementData(){return this._measurementData}_updateMeasurementData(){const e=this._measurementData;e.update(this.path,this.sceneView,this._unitNormalizer,this.validMeasurement,this.sceneView.renderSpatialReference,this._worldSpatialReference,this.fittingSettings),this.dataObject.result={area:e.area,geodesicArea:e.geodesicArea,pathLength:e.pathLength,geodesicPathLength:e.geodesicPathLength,perimeterLength:e.perimeterLength},this.notifyChange("measurementData")}get area(){return this.measurementData.area}get geodesicArea(){return this.measurementData.geodesicArea}get areaLabel(){return this._formatAreaLabel(this.messages,"geodesic"===this.measurementMode?this.measurementData.geodesicArea:this.measurementData.area,this.unit)}get pathLength(){return this.measurementData.pathLength}get geodesicPathLength(){return this.measurementData.geodesicPathLength}get pathLengthLabel(){return this._formatLengthLabel(this.messages,"geodesic"===this.measurementMode?this.measurementData.geodesicPathLength:this.measurementData.pathLength,this.unit)}get perimeterLength(){return this.measurementData.perimeterLength}get geodesicPerimeterLength(){return this.measurementData.geodesicPathLength}get perimeterLengthLabel(){return this.measurementData.perimeterLength&&this._formatLengthLabel(this.messages,"geodesic"===this.measurementMode?this.measurementData.geodesicPathLength:this.measurementData.perimeterLength,this.unit)}get cursorSegmentLength(){const e=this.path.lastPoint;return Object(j.k)(e)&&Object(j.k)(this.cursorPoint)?new Le.a(this._unitNormalizer.normalizeDistance(He.segmentLengthEuclidean(e,this.cursorPoint,this._worldSpatialReference)),"meters"):null}get geodesicCursorSegmentLength(){const e=this.path.lastPoint;return Object(j.k)(e)&&Object(j.k)(this.cursorPoint)?new Le.a(He.segmentLengthGeodesic(e,this.cursorPoint),"meters"):null}get cursorSegmentLengthLabel(){return this._formatLengthLabel(this.messages,"geodesic"===this.measurementMode?this.geodesicCursorSegmentLength:this.cursorSegmentLength,this.unit)}get viewData(){const e=this.measurementData,t="geodesic"===this.measurementMode,i=t?this.geodesicArea:this.area;let s=1;if(i){const e=this._toPreferredAreaUnit(i,this.unit);s=Object(_e.k)(Math.sqrt(e.value)/Math.sqrt(300)),s*=Math.sqrt(Object(l.c)(1,e.unit,"square-meters")),s/=this._unitNormalizer.normalizeDistance(1)}return{validMeasurement:this.validMeasurement,path:this.path,positionsGeographic:e.positionsGeographic,positionsRenderCoords:e.positionsRenderCoords,positionsProjected:e.positionsProjectedWorldCoords,positionsFittedRenderCoords:e.positionsFittedRenderCoords,intersectingSegments:t?e.geodesicIntersectingSegments:e.intersectingSegments,triangleIndices:t?e.geodesicTriangleIndices:e.triangleIndices,fittingMode:e.fittingMode,areaCentroid:t?e.geodesicAreaCentroidRenderCoords:e.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:this.validMeasurement?0:this.path.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:s}}get measurementMode(){let e=this.mode;return"auto"===e&&(e="euclidean",(this.geodesicPathLength?this.geodesicPathLength.value:0)+(!this.validMeasurement&&this.geodesicCursorSegmentLength?this.geodesicCursorSegmentLength.value:0)>this.geodesicMeasurementDistanceThreshold&&(e="geodesic")),null==this.geodesicPathLength&&(e="euclidean"),e}reset(){this.clearMeasurement(),this._updateMeasurementData()}clearMeasurement(){this.path.clear(),this.state="initial",this.cursorPoint=null}finishMeasurement(){this.path.numVertices<3?this.clearMeasurement():this.state="measured"}_preferredAreaUnit(e,t){switch(t){case"metric":return Object(l.u)(e.value,e.unit);case"imperial":return Object(l.r)(e.value,e.unit);default:return t}}_preferredLengthUnit(e,t){const i=this._deriveLengthUnitFromAreaUnit(t);switch(i){case"metric":return Object(l.v)(e.value,e.unit);case"imperial":return Object(l.s)(e.value,e.unit);default:return i}}_toPreferredAreaUnit(e,t){return e.toUnit(this._preferredAreaUnit(e,t))}_toPreferredLengthUnit(e,t){return e.toUnit(this._preferredLengthUnit(e,t))}_formatAreaLabel(e,t,i){return e&&t&&Object(fe.b)(e,t,this._preferredAreaUnit(t,i))}_formatLengthLabel(e,t,i){return e&&t&&Object(fe.b)(e,t,this._preferredLengthUnit(t,i))}_deriveLengthUnitFromAreaUnit(e){switch(e){case"metric":return"metric";case"imperial":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers";case"acres":return"imperial";case"ares":case"hectares":return"metric"}throw new Error("unhandled area unit")}};Object(s.a)([Object(n.b)()],Ye.prototype,"messages",void 0),Object(s.a)([Object(n.b)()],Ye.prototype,"dataObject",void 0),Object(s.a)([Object(n.b)({constructOnly:!0})],Ye.prototype,"sceneView",void 0),Object(s.a)([Object(n.b)({readOnly:!0})],Ye.prototype,"path",void 0),Object(s.a)([Object(n.b)()],Ye.prototype,"cursorPoint",void 0),Object(s.a)([Object(n.b)()],Ye.prototype,"state",void 0),Object(s.a)([Object(n.b)()],Ye.prototype,"lastDraggedVertex",void 0),Object(s.a)([Object(n.b)()],Ye.prototype,"mode",void 0),Object(s.a)([Object(n.b)()],Ye.prototype,"unit",void 0),Object(s.a)([Object(n.b)()],Ye.prototype,"active",void 0),Object(s.a)([Object(n.b)()],Ye.prototype,"fittingSettings",void 0),Object(s.a)([Object(n.b)({readOnly:!0})],Ye.prototype,"validMeasurement",null),Object(s.a)([Object(n.b)({readOnly:!0})],Ye.prototype,"numVertices",null),Object(s.a)([Object(n.b)({readOnly:!0})],Ye.prototype,"measurementData",null),Object(s.a)([Object(n.b)({readOnly:!0})],Ye.prototype,"area",null),Object(s.a)([Object(n.b)({readOnly:!0})],Ye.prototype,"geodesicArea",null),Object(s.a)([Object(n.b)({readOnly:!0})],Ye.prototype,"areaLabel",null),Object(s.a)([Object(n.b)({readOnly:!0})],Ye.prototype,"pathLength",null),Object(s.a)([Object(n.b)({readOnly:!0})],Ye.prototype,"geodesicPathLength",null),Object(s.a)([Object(n.b)({readOnly:!0})],Ye.prototype,"pathLengthLabel",null),Object(s.a)([Object(n.b)({readOnly:!0})],Ye.prototype,"perimeterLength",null),Object(s.a)([Object(n.b)({readOnly:!0})],Ye.prototype,"geodesicPerimeterLength",null),Object(s.a)([Object(n.b)({readOnly:!0})],Ye.prototype,"perimeterLengthLabel",null),Object(s.a)([Object(n.b)({readOnly:!0})],Ye.prototype,"cursorSegmentLength",null),Object(s.a)([Object(n.b)({readOnly:!0})],Ye.prototype,"geodesicCursorSegmentLength",null),Object(s.a)([Object(n.b)({readOnly:!0})],Ye.prototype,"cursorSegmentLengthLabel",null),Object(s.a)([Object(n.b)({readOnly:!0})],Ye.prototype,"viewData",null),Object(s.a)([Object(n.b)()],Ye.prototype,"geodesicMeasurementDistanceThreshold",void 0),Object(s.a)([Object(n.b)({readOnly:!0})],Ye.prototype,"measurementMode",null),Ye=Object(s.a)([Object(o.a)("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DModel")],Ye);var Xe=Ye;let et=class extends O.a{constructor(e){super(e),this._handles=new p.a,this.deferCreation=!0,this.model=new Xe({sceneView:e.view})}initialize(){this._view=new ce(this.model,this.manipulators),this._controller=new class{constructor(e,t,i){this._manipulators=i,this._handles=new p.a,this._tempPickRequest=new ce.PickRequest,this.model=e,this.view=t,this.model.reset(),this._setupManipulators()}destroy(){this._handles.destroy(),this._handles=null}handleInputEvent(e){switch(e.type){case"immediate-click":this._handleImmediateClick(e);break;case"pointer-move":this._handlePointerMove(e);break;case"drag":this._handleDrag(e);break;case"key-down":this._handleKeyDown(e)}}_setupManipulators(){const e=e=>`manipulator-${e}`;let t=0;const i=e=>i=>("start"===i.action&&(t++,this.model.lastDraggedVertex=Object(j.q)(this.view.manipulatorToVertex(e)),"measured"===this.model.state&&(this.model.state="editing")),i),s=()=>e=>"end"===e.action?(t--,0===t&&"editing"===this.model.state&&(this.model.state="measured"),null):e,r=(t,r)=>{this._handles.add([Object(me.e)(r,(e,t,r)=>{const n=Object(A.a)(e),a=Object(j.q)(this.view.manipulatorToVertex(e));t.next(i(e)).next(n).next(s()).next(this.view.screenToMap3D()).next(t=>{e.location=t.mapEnd,this.model.path.setVertexPosition(a,Object(ue.a)(t.mapEnd))});const o=Object(ue.a)(this.model.path.getVertexPositionAsPoint(a));r.next(n).next(()=>{this.model.path.setVertexPosition(a,o),e.location=o})}),r.events.on("double-click",e=>{pe(e)&&("drawing"===this.model.state&&this.model.finishMeasurement(),e.stopPropagation())})],e(t))},n=t=>{this._handles.remove(e(t))};this._manipulators.forEach(({id:e,manipulator:t})=>{r(e,t)}),this._handles.add([this._manipulators.on("after-add",({item:{id:e,manipulator:t}})=>{r(e,t)}),this._manipulators.on("after-remove",({item:{id:e}})=>{n(e)})])}_handleDrag(e){"editing"===this.model.state&&e.stopPropagation()}_handleImmediateClick(e){if(!pe(e))return;const t=Object(de.a)(e);if(this.model.active)switch(this.model.state){case"initial":this._addVertexAt(t)&&(this.model.state="drawing",e.stopPropagation());break;case"drawing":{const i=this.view.vertexHandleAt(t,e.pointerType);if(Object(j.j)(i)){if(this._addVertexAt(t))return}else 0===i.index&&(this.model.finishMeasurement(),e.stopPropagation());break}}"mouse"===e.pointerType&&this._hoverAt(t)}_handlePointerMove(e){if("mouse"===e.pointerType){const t=Object(de.a)(e);this._hoverAt(t)}}_handleKeyDown(e){"Enter"===e.key&&"drawing"===this.model.state&&(this.model.finishMeasurement(),e.stopPropagation())}_hoverAt(e){if(this.view.requiresCursorPoint){const t=this._pick(e);t.mapPoint&&(this.model.cursorPoint=t.mapPoint)}else this.model.cursorPoint=null}_addVertexAt(e){const t=this._pick(e);return!!t.mapPoint&&(this.model.path.add(t.mapPoint),!0)}_pick(e){const t=this._tempPickRequest;return t.screenPoint=e,this.view.pick(t)}}(this.model,this._view,this.manipulators),this._handles.add(Object(g.init)(this,"state",e=>{switch(e){case"measured":return this.complete();case"ready":break;default:return this.create()}},!0))}destroy(){this.detach(),this._view.destroy(),this._view=null,this._controller.destroy(),this._controller=null,this._handles.destroy(),this._handles=null}get state(){switch(this.model.state){case"initial":return this.model.numVertices>=1?"measuring":"ready";case"drawing":case"editing":return"measuring";case"measured":return"measured"}}get isSupported(){return"3d"===this.get("view.type")}get cursor(){return!this.model.active||"initial"!==this.model.state&&"drawing"!==this.model.state?null:"crosshair"}activate(){this.model.active=!0}deactivate(){this.model.active=!1}onShow(){this._view.show()}onHide(){this._view.hide()}onDetach(){this.model.reset()}onInputEvent(e){this._controller.handleInputEvent(e)}};Object(s.a)([Object(n.b)({readOnly:!0})],et.prototype,"state",null),Object(s.a)([Object(n.b)({readOnly:!0})],et.prototype,"isSupported",null),Object(s.a)([Object(n.b)({readOnly:!0})],et.prototype,"cursor",null),Object(s.a)([Object(n.b)({constructOnly:!0})],et.prototype,"model",void 0),Object(s.a)([Object(a.a)("model.mode")],et.prototype,"mode",void 0),Object(s.a)([Object(a.a)("model.unit")],et.prototype,"unit",void 0),Object(s.a)([Object(a.a)("model.areaLabel")],et.prototype,"areaLabel",void 0),Object(s.a)([Object(a.a)("model.area")],et.prototype,"area",void 0),Object(s.a)([Object(a.a)("model.geodesicArea")],et.prototype,"geodesicArea",void 0),Object(s.a)([Object(a.a)("model.pathLengthLabel")],et.prototype,"pathLengthLabel",void 0),Object(s.a)([Object(a.a)("model.pathLength")],et.prototype,"pathLength",void 0),Object(s.a)([Object(a.a)("model.geodesicPathLength")],et.prototype,"geodesicPathLength",void 0),Object(s.a)([Object(a.a)("model.perimeterLengthLabel")],et.prototype,"perimeterLengthLabel",void 0),Object(s.a)([Object(a.a)("model.perimeterLength")],et.prototype,"perimeterLength",void 0),Object(s.a)([Object(a.a)("model.geodesicPerimeterLength")],et.prototype,"geodesicPerimeterLength",void 0),Object(s.a)([Object(a.a)("model.validMeasurement")],et.prototype,"validMeasurement",void 0),Object(s.a)([Object(a.a)("model.viewData")],et.prototype,"viewData",void 0),et=Object(s.a)([Object(o.a)("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool")],et);var tt=et;const it=r.a.getLogger("esri.widgets.AreaMeasurement3D.AreaMeasurement3DViewModel");let st=class extends _.a{constructor(e){super(e),this.supportedViewType="3d",this._handles=new p.a,this._userUnitOptions=null,this._userUnit=null,this.tool=null}initialize(){this._handles.add([Object(g.init)(this,"unit",e=>{this.tool&&(this.tool.model.unit=e)})])}destroy(){this._handles&&(this._handles.destroy(),this._handles=null)}get state(){return this.isDisabled?"disabled":this.tool?this.tool.state:"ready"}get measurement(){if(!this.tool||this.isDisabled)return null;const e=this.tool.model,t=e.measurementMode,i=e.measurementData,s=e.validMeasurement,r=0===("euclidean"===t?i.intersectingSegments:i.geodesicIntersectingSegments).size,n=r?s?"available":"unavailable":"invalid";return{mode:t,area:{text:r&&s?e.areaLabel:null,state:n},perimeterLength:{text:r&&s?e.perimeterLengthLabel:null,state:n}}}set unitOptions(e){this._userUnitOptions=e,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(e){this._userUnit=e?this._findSelectableUnit(e,this._userUnit):null,this.notifyChange("unit")}get unit(){return this._userUnit?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}start(){return this.createTool()}clear(){this.removeTool()}createToolParams(){return{toolConstructor:tt,constructorArguments:()=>({unit:this.unit})}}logUnsupportedError(){it.error("AreaMeasurement3D widget is not implemented for MapView")}logError(...e){it.error(...e)}_findSelectableUnit(e,t){const i=this.unitOptions;return-1!==i.indexOf(e)?e:t?this._findSelectableUnit(t):i[0]}_filteredOrAllUnits(e){if(!e)return l.p.slice();const t=e.filter(e=>-1!==l.p.indexOf(e));return 0===t.length?l.p.slice():t}};Object(s.a)([Object(n.b)({readOnly:!0})],st.prototype,"state",null),Object(s.a)([Object(n.b)({readOnly:!0})],st.prototype,"measurement",null),Object(s.a)([Object(n.b)({constructOnly:!0})],st.prototype,"tool",void 0),Object(s.a)([Object(n.b)(b.a)],st.prototype,"defaultUnit",void 0),Object(s.a)([Object(n.b)()],st.prototype,"unitOptions",null),Object(s.a)([Object(n.b)()],st.prototype,"unit",null),st=Object(s.a)([Object(o.a)("esri.widgets.AreaMeasurement3D.AreaMeasurement3DViewModel")],st);var rt=st;let nt=class extends m.a{constructor(e,t){super(e,t),this.view=null,this.visible=null,this.iconClass="esri-icon-measure-area",this.label=void 0,this.messages=null,this.messagesUnits=null,this.viewModel=new rt,this.unitOptions=null,this.unit=null}render(){const{isSupported:e,active:t,measurement:i,state:s,unit:r}=this.viewModel,n="disabled"===s,a="ready"===s,o="measuring"===s||"measured"===s,{messages:h,messagesUnits:c}=this,d=t&&a?Object(u.a)("section",{key:"esri-area-measurement-3d__hint",class:"esri-area-measurement-3d__hint"},Object(u.a)("p",{class:"esri-area-measurement-3d__hint-text"},h.hint)):null,m=e?null:Object(u.a)("section",{key:"esri-area-measurement-3d__unsupported",class:"esri-area-measurement-3d__panel--error"},Object(u.a)("p",null,h.unsupported)),p=(e,t,i)=>{switch(t.state){case"available":return Object(u.a)("div",{key:`${i}-enabled`,class:"esri-area-measurement-3d__measurement-item"},Object(u.a)("span",{class:"esri-area-measurement-3d__measurement-item-title"},e),Object(u.a)("span",{class:"esri-area-measurement-3d__measurement-item-value"},t.text));case"unavailable":return Object(u.a)("div",{key:`${i}-disabled`,class:this.classes("esri-area-measurement-3d__measurement-item","esri-area-measurement-3d__measurement-item--disabled")},Object(u.a)("span",{class:"esri-area-measurement-3d__measurement-item-title"},e));case"invalid":return Object(u.a)("div",{key:`${i}-enabled`,class:"esri-area-measurement-3d__measurement-item"},Object(u.a)("span",{class:"esri-area-measurement-3d__measurement-item-title"},e),Object(u.a)("span",{class:"esri-area-measurement-3d__measurement-item-value"},h.notApplicable))}},g=o?Object(u.a)("section",{key:"esri-area-measurement-3d__measurement",class:"esri-area-measurement-3d__measurement"},p(h.area,i.area,"area"),p(h.perimeterLength,i.perimeterLength,"perimeter-length")):null,b=`${this.id}__units`,_=Object(u.a)("label",{class:"esri-area-measurement-3d__units-label",for:b},h.unit),O=Object(u.a)("div",{class:"esri-area-measurement-3d__units-select-wrapper"},Object(u.a)("select",{class:"esri-area-measurement-3d__units-select esri-select",id:b,onchange:this._changeUnit,bind:this,value:r},this.viewModel.unitOptions.map(e=>{var t;return Object(u.a)("option",{key:e,value:e},Object(l.l)(e)?c.systems[e]:null==(t=c.units[e])?void 0:t.pluralCapitalized)}))),j=o?Object(u.a)("section",{key:"esri-area-measurement-3d__units",class:"esri-area-measurement-3d__units"},_,O):null,v=o?Object(u.a)("div",{key:"settings",class:"esri-area-measurement-3d__settings"},j):null,L=!e||t&&!o?null:Object(u.a)("div",{class:"esri-area-measurement-3d__actions"},Object(u.a)("button",{disabled:n,class:this.classes("esri-area-measurement-3d__clear-button esri-button esri-button--primary",n&&"esri-button--disabled"),bind:this,onclick:this._newMeasurement,type:"button"},h.newMeasurement)),f=this.visible?Object(u.a)("div",{class:"esri-area-measurement-3d__container"},m,d,v,g,L):null;return Object(u.a)("div",{key:this,class:"esri-area-measurement-3d esri-widget esri-widget--panel",role:"presentation"},f)}_newMeasurement(){Object(h.l)(this.viewModel.start())}_changeUnit(e){const t=e.target,i=t.options[t.selectedIndex];i&&(this.unit=i.value)}};Object(s.a)([Object(a.a)("viewModel.view")],nt.prototype,"view",void 0),Object(s.a)([Object(a.a)("viewModel.visible")],nt.prototype,"visible",void 0),Object(s.a)([Object(a.a)("viewModel.active")],nt.prototype,"active",void 0),Object(s.a)([Object(n.b)()],nt.prototype,"iconClass",void 0),Object(s.a)([Object(n.b)({aliasOf:{source:"messages.widgetLabel",overridable:!0}})],nt.prototype,"label",void 0),Object(s.a)([Object(n.b)(),Object(d.a)("esri/widgets/AreaMeasurement3D/t9n/AreaMeasurement3D")],nt.prototype,"messages",void 0),Object(s.a)([Object(n.b)(),Object(d.a)("esri/core/t9n/Units")],nt.prototype,"messagesUnits",void 0),Object(s.a)([Object(n.b)({type:rt})],nt.prototype,"viewModel",void 0),Object(s.a)([Object(a.a)("viewModel.unitOptions")],nt.prototype,"unitOptions",void 0),Object(s.a)([Object(a.a)("viewModel.unit")],nt.prototype,"unit",void 0),Object(s.a)([Object(c.a)()],nt.prototype,"_newMeasurement",null),Object(s.a)([Object(c.a)()],nt.prototype,"_changeUnit",null),nt=Object(s.a)([Object(o.a)("esri.widgets.AreaMeasurement3D")],nt),t.default=nt}}]);