(window.webpackJsonp=window.webpackJsonp||[]).push([[189],{"0Pge":function(e,t,i){"use strict";i.r(t);var s=i("pO5D"),n=(i("wSAH"),i("6S2I")),a=(i("zqDF"),i("WbKI")),r=i("Stxv"),o=i("04ZG"),l=(i("4EHJ"),i("ju1D"),i("9AIY"),i("9MzC")),c=i("gEht"),d=(i("cCpn"),i("h1D1")),u=i("dV4Z"),h=i("Jv1m"),b=i("Ehpe"),p=i("srIe"),m=i("r0DZ"),_=i("N5XI");const O={};var v=i("Pt/X"),j=i("fqh+"),g=i("SuVq"),w=(i("4GrV"),i("QS+a")),y=i("08/N"),P=i("wg3g"),L=i("R3Kl"),f=i("tKWm"),M=i("/CmD"),D=i("e31P"),k=i("BkZU");class V{constructor(e,t){this.owner=t,this.properties={},this.afterDispatchHandle=null;for(const i in e){const t=new D.a(e[i],null,null,2,2);this.properties[i]={pool:t,acquired:[]}}this.afterDispatchHandle=Object(k.a)(()=>this.release())}destroy(){this.afterDispatchHandle&&(this.afterDispatchHandle.remove(),this.afterDispatchHandle=null);for(const e in this.properties){const t=this.properties[e];for(const e of t.acquired)Object(k.b)(e)||t.pool.release(e);t.pool.destroy(),t.pool=null,t.acquired=null}this.properties=null,this.owner=null}get(e){const t=this.owner._get(e),i=this.properties[e];let s=i.pool.acquire();for(i.acquired.push(s);s===t;)i.acquired.push(s),s=i.pool.acquire();return s}release(){for(const e in this.properties){const t=this.properties[e];let i=0;for(const e of t.acquired)Object(k.b)(e)?t.acquired[i++]=e:t.pool.release(e);t.acquired.length=i}}}let x=class extends M.a{constructor(){super(...arguments),this.type="DirectLineMeasurement3D",this.visible=!0,this.settings=new T,this.measurement=null}destroy(){this.settings.destroy()}set startPoint(e){this.measurement=null,this._set("startPoint",Object(p.k)(e)?e.clone():null)}set endPoint(e){this.measurement=null,this._set("endPoint",Object(p.k)(e)?e.clone():null)}};Object(s.a)([Object(a.b)()],x.prototype,"type",void 0),Object(s.a)([Object(a.b)()],x.prototype,"visible",void 0),Object(s.a)([Object(a.b)()],x.prototype,"settings",void 0),Object(s.a)([Object(a.b)({value:null})],x.prototype,"startPoint",null),Object(s.a)([Object(a.b)({value:null})],x.prototype,"endPoint",null),Object(s.a)([Object(a.b)()],x.prototype,"measurement",void 0),x=Object(s.a)([Object(o.a)("esri.views.3d.interactive.graphics.DirectLineMeasurement3D.DirectLineMeasurement3D")],x);let T=class extends M.a{constructor(){super(...arguments),this.unit="metric"}};Object(s.a)([Object(a.b)({value:"metric"})],T.prototype,"unit",void 0),T=Object(s.a)([Object(o.a)("esri.views.3d.interactive.graphics.directLineMeasurement3D.Settings")],T);let S=class extends M.a{constructor(){super(...arguments),this._handles=new m.a,this._propertiesPool=new V({startPoint:g.a,endPoint:g.a},this),this.model=new x,this.cursorPoint=null,this.state="initial",this.active=!1,this.geodesicMeasurementDistanceThreshold=1e5}initialize(){this.sceneView.analyses.add(this.model),this.reset()}destroy(){this._handles.destroy(),this._handles=null,this.sceneView.analyses.remove(this.model),this._propertiesPool.destroy(),this._propertiesPool=null,this.model.destroy()}set startPointSurfaceLocation(e){this._set("startPointSurfaceLocation",e)}set endPointSurfaceLocation(e){this._set("endPointSurfaceLocation",e)}get measurementSurfaceLocation(){const e=this.startPointSurfaceLocation,t=this.endPointSurfaceLocation;return null==e||null==t||"above-the-surface"===e&&"below-the-surface"===t||"below-the-surface"===e&&"above-the-surface"===t||"on-the-surface"===e&&"on-the-surface"===t?"camera-dependent":"above-the-surface"===e||"above-the-surface"===t?"above-the-surface":"below-the-surface"}get validMeasurement(){return Object(p.k)(this.model.startPoint)&&Object(p.k)(this.model.endPoint)}get isMeasuring(){return!!this.startPoint}get geodesicDistanceExceeded(){return Object(p.k)(this.model.measurement)&&this.model.measurement.horizontalDistance&&this.model.measurement.horizontalDistance.value>this.geodesicMeasurementDistanceThreshold}reset(){this.clearMeasurement()}clearMeasurement(){this.state="initial",this.startPoint=null,this.endPoint=null,this.cursorPoint=null,this._clearOverride("measurementSurfaceLocation")}finishMeasurement(){if(!this._isOverridden("measurementSurfaceLocation")){const e=this.measurementSurfaceLocation;this._override("measurementSurfaceLocation","camera-dependent"===e?this.sceneView.state.camera.aboveGround?"above-the-surface":"below-the-surface":e)}this.state="measured"}};Object(s.a)([Object(a.b)()],S.prototype,"messages",void 0),Object(s.a)([Object(a.b)({constructOnly:!0})],S.prototype,"sceneView",void 0),Object(s.a)([Object(a.b)()],S.prototype,"model",void 0),Object(s.a)([Object(r.a)("model.startPoint")],S.prototype,"startPoint",void 0),Object(s.a)([Object(a.b)({value:null})],S.prototype,"startPointSurfaceLocation",null),Object(s.a)([Object(r.a)("model.endPoint")],S.prototype,"endPoint",void 0),Object(s.a)([Object(a.b)({value:null})],S.prototype,"endPointSurfaceLocation",null),Object(s.a)([Object(a.b)()],S.prototype,"measurementSurfaceLocation",null),Object(s.a)([Object(a.b)()],S.prototype,"cursorPoint",void 0),Object(s.a)([Object(a.b)()],S.prototype,"state",void 0),Object(s.a)([Object(r.a)("model.settings.unit")],S.prototype,"unit",void 0),Object(s.a)([Object(a.b)()],S.prototype,"active",void 0),Object(s.a)([Object(a.b)({readOnly:!0})],S.prototype,"validMeasurement",null),Object(s.a)([Object(a.b)({readOnly:!0})],S.prototype,"isMeasuring",null),Object(s.a)([Object(a.b)()],S.prototype,"geodesicMeasurementDistanceThreshold",void 0),Object(s.a)([Object(a.b)({readOnly:!0})],S.prototype,"geodesicDistanceExceeded",null),S=Object(s.a)([Object(o.a)("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DModel")],S);var C,q=S,U=i("qRWG"),R=i("Cy1f"),z=i("DLk3"),I=i("0Kx6"),H=i("klA5"),E=i("ZHv2"),$=i("dK/y"),A=i("B3Fv");const G={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:.75,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5};let F=C=class extends M.a{constructor(e){super({model:e.model}),this._state="pending",this._visible=!1,this._laserLine=null,this._handles=new m.a,this._listenerHandles=null,this._cursorPosition=Object(R.e)(),this._startPosition=Object(R.e)(),this._endPosition=Object(R.e)(),this._lastDraggedHandle=null,this.dataObjectView=null,this._view=e.model.sceneView,this._params=e.params?Object(A.a)(G,e.params):Object(A.a)(G,{}),this._intersector=new H.a(this._view.state.mode),this._intersector.options.store=0}initialize(){const e=this.model.model,t=this._view.getAnalysisView(e);Object(p.k)(t)?this._initialize(t):this._view.whenAnalysisView(e).then(e=>this._initialize(e))}_initialize(e){switch(this._state){case"pending":break;case"destroyed":return}this._set("dataObjectView",e),this._laserLine=new E.a({view:this._view,attached:!0}),this._initializeListeners(),this._state="ready"}destroy(){switch(this._state){case"pending":return void(this._state="destroyed");case"ready":break;case"destroyed":default:return}this.hide(),this._destroyListeners(),this._handles.destroy(),this._handles=null,this._laserLine.destroy(),this._laserLine=null,this._state="destroyed"}get requiresCursorPoint(){return"initial"===this.model.state&&this.model.active}get visible(){return this._visible}set visible(e){e?this.show():this.hide()}get viewMode(){const e=this.dataObjectView;if(!Object(p.k)(e))return W.None;switch(e.viewMode){default:case"none":return W.None;case"segment":return W.Direct;case"segment-and-triangle":return W.Triangle;case"segment-and-projection":return W.ProjectedGeodesic}}get testData(){const e=this._laserLine.testData;return{...Object(p.k)(this.dataObjectView)?this.dataObjectView.testData:{labels:{direct:null,horizontal:null,vertical:null},stripeLength:1},laserLineRenderer:{heightManifoldEnabled:!!Object(p.k)(e)&&e.heightManifoldEnabled,heightManifoldTarget:Object(p.k)(e)?e.heightManifoldTarget:null,pointDistanceEnabled:!!Object(p.k)(e)&&e.pointDistanceEnabled,pointDistanceOrigin:Object(p.k)(e)?e.pointDistanceOrigin:null,pointDistanceTarget:Object(p.k)(e)?e.pointDistanceTarget:null,lineVerticalPlaneEnabled:!!Object(p.k)(e)&&e.lineVerticalPlaneEnabled}}}get directLabelText(){return Object(p.k)(this.dataObjectView)?this.dataObjectView.segmentLabel.text:null}get horizontalLabelText(){return Object(p.k)(this.dataObjectView)?this.dataObjectView.horizontalLabel.text:null}get verticalLabelText(){return Object(p.k)(this.dataObjectView)?this.dataObjectView.verticalLabel.text:null}createManipulators(){const e=()=>{const e=Object($.e)(this._view,this._params.handleColor,this._params.handleOpacity);return e.available=!1,e.radius=this._params.handleRadius,e},t=e(),i=e();this.model.startPoint&&(t.location=Object(p.q)(this.model.startPoint),t.available=!0),this.model.endPoint&&(i.location=Object(p.q)(this.model.endPoint),i.available=!0);const s=()=>{let e=this._lastDraggedHandle;t.grabbing&&!i.grabbing&&(e="start"),i.grabbing&&!t.grabbing&&(e="end"),t.grabbing||i.grabbing||(e=null);const s=e!==this._lastDraggedHandle;this._lastDraggedHandle=e,s&&this.visible&&this._updateLaserLine()};return this._handles.add([t.events.on("grab-changed",()=>{s()}),i.events.on("grab-changed",()=>{s()})]),{start:t,end:i}}show(){switch(this._state){case"ready":this._visible||(this._visible=!0,this.model.model.visible=!0,this._laserLine.style={innerColor:this._params.laserLineInnerColor,innerWidth:this._params.laserLineInnerWidth,glowColor:this._params.laserLineGlowColor,glowWidth:this._params.laserLineGlowWidth,glowFalloff:this._params.laserLineGlowFalloff,globalAlpha:this._params.laserLineGlobalAlpha},this._laserLine.visible=!0,this._updateCursorPosition(),this._updateStartPosition(),this._updateEndPosition(),this._updateLaserLine());break;case"pending":this._visible=!0;break;case"destroyed":default:return}}hide(){switch(this._state){case"ready":this._visible&&(this._visible=!1,this.model.model.visible=!1,this._laserLine.visible=!1,this._view.cursor=null);break;case"pending":this._visible=!1;break;case"destroyed":default:return}}pick(e){const t=this._view.spatialReference,i=Object(U.j)(e.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(i,this._intersector);const s=this._intersector.results.min,n=Object(R.e)();if(!s.getIntersectionPoint(n))return new C.PickResult;const a=this._view.renderCoordsHelper.fromRenderCoords(n,t);return Object(p.j)(a)?new C.PickResult:new C.PickResult("TerrainRenderer"===s.intersector?"ground":"feature",n,a)}getElevation(e){return this._view.basemapTerrain.ready?Object(p.r)(Object(z.a)(this._view.elevationProvider,e),0):0}overlappingHandles(e,t){return Object(A.c)(e,t,this._view)<=this._params.handleRadius}_updateCursorPosition(){this.model.cursorPoint&&this._view.renderCoordsHelper.toRenderCoords(this.model.cursorPoint,this._cursorPosition)}_updateStartPosition(){Object(p.k)(this.model.startPoint)&&this._view.renderCoordsHelper.toRenderCoords(this.model.startPoint,this._startPosition)}_updateEndPosition(){Object(p.k)(this.model.endPoint)&&this._view.renderCoordsHelper.toRenderCoords(this.model.endPoint,this._endPosition)}_getFocusPosition(){const e=this.model,t=this.viewMode===W.Direct&&Object(p.k)(this.dataObjectView)&&"euclidean"===this.dataObjectView.visualizedMeasurement;switch(e.state){case"drawing":return t?this._startPosition:e.endPoint?this._endPosition:this._startPosition;case"editing":return t?"start"===this._lastDraggedHandle?this._endPosition:this._startPosition:"start"===this._lastDraggedHandle?this._startPosition:this._endPosition;default:return e.cursorPoint?this._cursorPosition:null}}_getFocusSpherePosition(){return"drawing"===this.model.state||"end"===this._lastDraggedHandle?this._startPosition:this._endPosition}_updateLaserLine(){const e=this.model,t=this._getFocusPosition(),i=this.viewMode,s=this.dataObjectView,n=this._params.laserLineEnabled&&!!t&&"measured"!==e.state&&e.active;n&&Object(p.k)(s)?(this._laserLine.heightManifoldTarget="euclidean"===s.actualVisualizedMeasurement?t:null,this._laserLine.pointDistanceLine=n&&e.startPoint&&"geodesic"===s.actualVisualizedMeasurement?{origin:this._getFocusSpherePosition(),target:t}:null,this._laserLine.lineVerticalPlaneSegment=n&&i===W.Triangle?I.d.fromPoints(this._startPosition,this._endPosition,N):null):(this._laserLine.heightManifoldTarget=null,this._laserLine.pointDistanceLine=null,this._laserLine.lineVerticalPlaneSegment=null)}_initializeListeners(){this._listenerHandles=new m.a,this._listenerHandles.add([this.model.watch("state",e=>{Object(p.c)(this.dataObjectView,t=>{t.allowVisualElementsOrientationChange="measured"!==e}),this._visible&&this._updateLaserLine()},!0),this.model.watch("measurementMode",()=>{this._visible&&this._updateLaserLine()},!0),this.model.watch("cursorPoint",()=>{this._updateCursorPosition(),this._visible&&this._updateLaserLine()},!0),this.model.model.watch("startPoint",()=>{this._updateStartPosition(),this._visible&&this._updateLaserLine()},!0),this.model.model.watch("endPoint",()=>{this._updateEndPosition(),this._visible&&this._updateLaserLine()},!0),this.model.watch("active",()=>{this._visible&&this._updateLaserLine()},!0)])}_destroyListeners(){this._listenerHandles.destroy(),this._listenerHandles=null}};var W,K;Object(s.a)([Object(a.b)({readOnly:!0})],F.prototype,"dataObjectView",void 0),Object(s.a)([Object(a.b)({constructOnly:!0})],F.prototype,"model",void 0),Object(s.a)([Object(a.b)()],F.prototype,"directLabelText",null),Object(s.a)([Object(a.b)()],F.prototype,"horizontalLabelText",null),Object(s.a)([Object(a.b)()],F.prototype,"verticalLabelText",null),F=C=Object(s.a)([Object(o.a)("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DView")],F),function(e){e.PickRequest=class{},e.PickResult=class{constructor(e=null,t=null,i=null){this.type=e,this.scenePoint=t,this.mapPoint=i}}}(F||(F={})),(K=W||(W={}))[K.Triangle=0]="Triangle",K[K.ProjectedGeodesic=1]="ProjectedGeodesic",K[K.Direct=2]="Direct",K[K.None=3]="None";const N=I.d.create();let Z=class extends L.a{constructor(e){super(e),this._handles=new m.a,this._cachedPickRequest=new F.PickRequest,this._cachedPickResult=new F.PickResult,this._isAnyPointerDown=!1,this.deferCreation=!0,this.startManipulator=null,this.endManipulator=null,this.model=new q({sceneView:e.view})}initialize(){const e=new F({model:this.model});this._set("directLineMeasurementView",e);const t=Object(_.init)(this,"state",e=>{"ready"!==e&&this.create(),"measured"===e&&this.complete()},!0);this._handles.add(t);const{start:i,end:s}=this.directLineMeasurementView.createManipulators(),n=(e,t,i)=>Object(P.e)(e,(e,s,n)=>{const a=Object(f.a)(e);s.next(a).next(Object(f.b)(this.view)).next(e=>"start"!==e.action?e:null).next(s=>{const n=Object(y.a)(s.mapEnd,B);this.model[t]=n,e.location=n,this.model[i]=this._surfaceLocation(n,s.surfaceType)}),n.next(a).next(Object(P.k)(this.model,[t,i])).next(()=>{e.location=Object(p.q)(this.model[t])})});this._handles.add([n(i,"startPoint","startPointSurfaceLocation"),n(s,"endPoint","endPointSurfaceLocation")]),[i,s].forEach(e=>{this._handles.add([e.events.on("grab-changed",()=>{const e=i.grabbing||s.grabbing;e&&"measured"===this.model.state&&(this.model.state="editing"),e||(this.model.finishMeasurement(),"editing"===this.model.state&&(this.model.state="measured"))})])}),this.manipulators.add(i),this.manipulators.add(s),this.startManipulator=i,this.endManipulator=s}destroy(){this.directLineMeasurementView.destroy(),this._set("directLineMeasurementView",null),this.model.destroy(),this._set("model",null),this._handles.destroy(),this._handles=null}get state(){var e;return null!=(e=this.model)&&e.isMeasuring?"measured"===this.model.state?"measured":"measuring":"ready"}get creating(){return"initial"===this.model.state||"drawing"===this.model.state}get isSupported(){return"3d"===this.get("view.type")}get cursor(){var e;return null==(e=this.model)||!e.active||"drawing"!==this.model.state&&"initial"!==this.model.state?null:"crosshair"}activate(){this.model.active=!0}deactivate(){this.model.active=!1}onDetach(){this.model.reset()}onShow(){this.directLineMeasurementView.show(),this._updateManipulatorVisibility()}onHide(){this.directLineMeasurementView.hide()}onInputEvent(e){switch(e.type){case"immediate-click":this._handleImmediateClick(e);break;case"pointer-move":this._handlePointerMove(e);break;case"pointer-down":this._handlePointerDown();break;case"pointer-up":this._handlePointerUp()}this._updateManipulatorVisibility()}_handlePointerMove(e){this._clearCachedPickRequest();const t=Object(w.a)(e);"mouse"===e.pointerType&&(this._hoverAt(t),"drawing"===this.model.state&&(this.endManipulator.events.emit("drag",{action:"update",start:t,screenPoint:t}),e.stopPropagation()))}_handlePointerDown(){this._isAnyPointerDown=!0}_handlePointerUp(){this._isAnyPointerDown=!1}_handleImmediateClick(e){if(this._clearCachedPickRequest(),!function(e){return"mouse"!==e.pointerType||0===e.button}(e))return;const t=Object(w.a)(e),i=e.pointerType;let s=!1;if(this.model.active)switch(this.model.state){case"initial":this.startManipulator.events.emit("drag",{action:"start",pointerType:i,start:t,screenPoint:t}),this.startManipulator.events.emit("drag",{action:"end",start:t,screenPoint:t}),this.model.startPoint&&(this.startManipulator.interactive=!1,this.endManipulator.interactive=!1,this.model.state="drawing",this.endManipulator.events.emit("drag",{action:"start",pointerType:i,start:t,screenPoint:t}),s=!0);break;case"drawing":this.endManipulator.events.emit("drag",{action:"update",start:t,screenPoint:t}),null!=this.model.endPoint&&(this.endManipulator.events.emit("drag",{action:"end",start:t,screenPoint:t}),this.startManipulator.interactive=!0,this.endManipulator.interactive=!0,this.model.finishMeasurement(),s=!0)}s&&e.stopPropagation(),"mouse"===e.pointerType&&this._hoverAt(t)}_hoverAt(e){if(!this.directLineMeasurementView.requiresCursorPoint||this._isAnyPointerDown&&"drawing"!==this.model.state&&"editing"!==this.model.state)this.model.cursorPoint=null;else{const t=this._pick(e);t.mapPoint&&(this.model.cursorPoint=t.mapPoint)}}_pick(e){const t=this._cachedPickRequest.screenPoint;return t&&t.x===e.x&&t.y===e.y||(this._cachedPickRequest.screenPoint=e,this._cachedPickResult=this.directLineMeasurementView.pick(this._cachedPickRequest)),this._cachedPickResult}_clearCachedPickRequest(){this._cachedPickRequest.screenPoint=null}_surfaceLocation(e,t){return 0===t?"on-the-surface":e.z>=this.directLineMeasurementView.getElevation(e)?"above-the-surface":"below-the-surface"}_updateManipulatorVisibility(){this.startManipulator.available=null!=this.model.startPoint,this.endManipulator.available=null!=this.model.endPoint}};Object(s.a)([Object(a.b)({readOnly:!0})],Z.prototype,"state",null),Object(s.a)([Object(a.b)({readOnly:!0})],Z.prototype,"creating",null),Object(s.a)([Object(a.b)({readOnly:!0})],Z.prototype,"isSupported",null),Object(s.a)([Object(a.b)({readOnly:!0})],Z.prototype,"cursor",null),Object(s.a)([Object(a.b)({constructOnly:!0})],Z.prototype,"model",void 0),Object(s.a)([Object(a.b)({constructOnly:!0})],Z.prototype,"directLineMeasurementView",void 0),Object(s.a)([Object(r.a)("model.mode")],Z.prototype,"mode",void 0),Object(s.a)([Object(r.a)("model.unit")],Z.prototype,"unit",void 0),Object(s.a)([Object(r.a)("model.validMeasurement")],Z.prototype,"validMeasurement",void 0),Z=Object(s.a)([Object(o.a)("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DTool")],Z);const B=new g.a;var J=Z;const X=n.a.getLogger("esri.widgets.DirectLineMeasurement3D.DirectLineMeasurement3DViewModel");let Q=class extends j.a{constructor(e){super(e),this.supportedViewType="3d",this._handles=new m.a,this._userUnitOptions=null,this._userUnit=null}initialize(){this._handles.add([Object(_.init)(this,"unit",e=>{this.tool&&(this.tool.model.unit=e)})])}destroy(){this._handles.destroy(),this._handles=null}get state(){return this.isDisabled?"disabled":this.tool?this.tool.state:"ready"}get measurement(){if(!this.tool)return null;const e=this.tool.model,t=this.tool.directLineMeasurementView.dataObjectView;if(Object(p.j)(t))return{mode:"euclidean",directDistance:{text:null,state:"unavailable"},horizontalDistance:{text:null,state:"unavailable"},verticalDistance:{text:null,state:"unavailable"}};const i=t.actualVisualizedMeasurement,s=this.tool.directLineMeasurementView,n=Object(p.k)(e.model.measurement)?"available":"unavailable";switch(i){case"euclidean":return{mode:i,directDistance:{text:s.directLabelText,state:n},horizontalDistance:{text:s.horizontalLabelText,state:n},verticalDistance:{text:s.verticalLabelText,state:n}};case"geodesic":return{mode:i,directDistance:{text:null,state:"unavailable"},horizontalDistance:{text:s.directLabelText,state:n},verticalDistance:{text:s.verticalLabelText,state:n}}}}set unitOptions(e){this._userUnitOptions=e,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(e){this._userUnit=e?this._findSelectableUnit(e,this._userUnit):null,this.notifyChange("unit")}get unit(){return this._userUnit?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}start(){return this.createTool()}clear(){this.removeTool()}static async preload(){return async function(e){await async function(e){return e in O||(O[e]=Promise.all([Promise.all([i.e(11),i.e(0),i.e(69)]).then(i.bind(null,"7K5q")),Promise.all([i.e(0),i.e(166)]).then(i.bind(null,"kvvF"))]).then(e=>({viewConstructor:e[0].DirectLineMeasurement3DView,controllerConstructor:e[1].DirectLineMeasurement3DController}))),O[e]}("DirectLineMeasurement3D")}()}createToolParams(){return{toolConstructor:J,constructorArguments:()=>({unit:this.unit})}}logUnsupportedError(){X.error("DirectLineMeasurement3D widget is not implemented for MapView")}logError(...e){X.error(...e)}_findSelectableUnit(e,t){const i=this.unitOptions;return-1!==i.indexOf(e)?e:t?this._findSelectableUnit(t):i[0]}_filteredOrAllUnits(e){if(!e)return c.q.slice();const t=e.filter(e=>-1!==c.q.indexOf(e));return 0===t.length?c.q.slice():t}};Object(s.a)([Object(a.b)({readOnly:!0})],Q.prototype,"state",null),Object(s.a)([Object(a.b)({readOnly:!0})],Q.prototype,"measurement",null),Object(s.a)([Object(a.b)()],Q.prototype,"tool",void 0),Object(s.a)([Object(a.b)(v.a)],Q.prototype,"defaultUnit",void 0),Object(s.a)([Object(a.b)()],Q.prototype,"unitOptions",null),Object(s.a)([Object(a.b)()],Q.prototype,"unit",null),Q=Object(s.a)([Object(o.a)("esri.widgets.DirectLineMeasurement3D.DirectLineMeasurement3DViewModel")],Q);var Y=Q;const ee="esri-direct-line-measurement-3d",te={buttonDisabled:"esri-button--disabled",base:`${ee} esri-widget esri-widget--panel`,container:`${ee}__container`,hint:`${ee}__hint`,hintText:`${ee}__hint-text`,panelError:`${ee}__panel--error`,measurement:`${ee}__measurement`,measurementItem:`${ee}__measurement-item`,measurementItemDisabled:`${ee}__measurement-item--disabled`,measurementItemTitle:`${ee}__measurement-item-title`,measurementItemValue:`${ee}__measurement-item-value`,settings:`${ee}__settings`,units:`${ee}__units`,unitsLabel:`${ee}__units-label`,unitsSelect:`${ee}__units-select esri-select`,unitsSelectWrapper:`${ee}__units-select-wrapper`,actionSection:`${ee}__actions`,newMeasurementButton:`${ee}__clear-button esri-button esri-button--primary`,widgetIcon:"esri-icon-measure-line"};let ie=class extends b.a{constructor(e,t){super(e,t),this.view=null,this.visible=null,this.iconClass=te.widgetIcon,this.label=void 0,this.messages=null,this.messagesUnits=null,this.viewModel=new Y,this.unitOptions=null,this.unit=null}render(){const{isSupported:e,active:t,state:i,measurement:s,unit:n}=this.viewModel,a="disabled"===i,r="ready"===i,o="measuring"===i||"measured"===i,{messages:l,messagesUnits:d}=this,u=t&&r?Object(h.a)("section",{key:"esri-direct-line-measurement-3d__hint",class:te.hint},Object(h.a)("p",{class:te.hintText},l.hint)):null,b=e?null:Object(h.a)("section",{key:"esri-direct-line-measurement-3d__unsupported",class:te.panelError},Object(h.a)("p",null,l.unsupported)),p=(e,t,i)=>{switch(t.state){case"available":return Object(h.a)("div",{key:`${i}-enabled`,class:te.measurementItem},Object(h.a)("span",{class:te.measurementItemTitle},e),Object(h.a)("span",{class:te.measurementItemValue},t.text));case"unavailable":return Object(h.a)("div",{key:`${i}-disabled`,class:this.classes(te.measurementItem,te.measurementItemDisabled)},Object(h.a)("span",{class:te.measurementItemTitle},e))}},m=o?Object(h.a)("section",{key:"esri-direct-line-measurement-3d__measurement",class:te.measurement},p(l.direct,s.directDistance,"direct"),p(l.horizontal,s.horizontalDistance,"horizontal"),p(l.vertical,s.verticalDistance,"vertical")):null,_=`${this.id}__units`,O=Object(h.a)("label",{class:te.unitsLabel,for:_},l.unit),v=Object(h.a)("div",{class:te.unitsSelectWrapper},Object(h.a)("select",{class:te.unitsSelect,id:_,onchange:this._changeUnit,bind:this,value:n},this.viewModel.unitOptions.map(e=>{var t;return Object(h.a)("option",{key:e,value:e},Object(c.l)(e)?d.systems[e]:null==(t=d.units[e])?void 0:t.pluralCapitalized)}))),j=Object(h.a)("section",{key:"esri-direct-line-measurement-3d__units",class:te.units},O,v),g=o?Object(h.a)("div",{key:"settings",class:te.settings},j):null,w=!e||t&&!o?null:Object(h.a)("div",{class:te.actionSection},Object(h.a)("button",{disabled:a,class:this.classes(te.newMeasurementButton,a&&te.buttonDisabled),bind:this,onclick:this._newMeasurement,type:"button"},l.newMeasurement)),y=this.visible?Object(h.a)("div",{class:te.container},b,u,g,m,w):null;return Object(h.a)("div",{key:this,class:te.base,role:"presentation"},y)}_newMeasurement(){Object(l.l)(this.viewModel.start())}_changeUnit(e){const t=e.target,i=t.options[t.selectedIndex];i&&(this.unit=i.value)}beforeFirstRender(){return Y.preload().then(()=>super.beforeFirstRender())}};Object(s.a)([Object(r.a)("viewModel.view")],ie.prototype,"view",void 0),Object(s.a)([Object(r.a)("viewModel.visible")],ie.prototype,"visible",void 0),Object(s.a)([Object(r.a)("viewModel.active")],ie.prototype,"active",void 0),Object(s.a)([Object(a.b)()],ie.prototype,"iconClass",void 0),Object(s.a)([Object(a.b)({aliasOf:{source:"messages.widgetLabel",overridable:!0}})],ie.prototype,"label",void 0),Object(s.a)([Object(a.b)(),Object(u.a)("esri/widgets/DirectLineMeasurement3D/t9n/DirectLineMeasurement3D")],ie.prototype,"messages",void 0),Object(s.a)([Object(a.b)(),Object(u.a)("esri/core/t9n/Units")],ie.prototype,"messagesUnits",void 0),Object(s.a)([Object(a.b)({type:Y})],ie.prototype,"viewModel",void 0),Object(s.a)([Object(r.a)("viewModel.unitOptions")],ie.prototype,"unitOptions",void 0),Object(s.a)([Object(r.a)("viewModel.unit")],ie.prototype,"unit",void 0),Object(s.a)([Object(d.a)()],ie.prototype,"_newMeasurement",null),Object(s.a)([Object(d.a)()],ie.prototype,"_changeUnit",null),ie=Object(s.a)([Object(o.a)("esri.widgets.DirectLineMeasurement3D")],ie),t.default=ie}}]);